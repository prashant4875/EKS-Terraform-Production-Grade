name: 'Drift Detection'

on:
  schedule:
    # Run every day at 9 AM UTC
    - cron: '0 9 * * *'
  workflow_dispatch:

env:
  TF_VERSION: '1.5.7'
  AWS_REGION: 'us-east-1'

jobs:
  detect-drift:
    name: 'Detect Configuration Drift'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [dev, staging, prod]
    
    permissions:
      contents: read
      issues: write
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

    #   - name: Configure AWS Credentials
    #     uses: aws-actions/configure-aws-credentials@v4
    #     with:
    #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #       aws-region: ${{ env.AWS_REGION }}

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::274601145879:role/GithubOIDCRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        working-directory: ./environments/${{ matrix.environment }}
        run: terraform init

      - name: Terraform Plan
        id: plan
        working-directory: ./environments/${{ matrix.environment }}
        run: |
          terraform plan -detailed-exitcode -no-color > plan-output.txt 2>&1
          echo "exitcode=$?" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Check for Drift
        id: drift
        run: |
          if [ "${{ steps.plan.outputs.exitcode }}" == "2" ]; then
            echo "drift=true" >> $GITHUB_OUTPUT
            echo "Drift detected in ${{ matrix.environment }}"
          else
            echo "drift=false" >> $GITHUB_OUTPUT
            echo "No drift detected in ${{ matrix.environment }}"
          fi

      - name: Create Issue for Drift
        if: steps.drift.outputs.drift == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const planOutput = fs.readFileSync('./environments/${{ matrix.environment }}/plan-output.txt', 'utf8');
            
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `[Drift Detection] Configuration drift in ${{ matrix.environment }}`,
              body: `## Configuration Drift Detected
              
              **Environment:** ${{ matrix.environment }}
              **Detected at:** ${new Date().toISOString()}
              
              ### Plan Output
              
              
              Click to expand
              
              \`\`\`terraform
              ${planOutput}
              \`\`\`
              
              
              
              ### Action Required
              
              Please review the drift and take appropriate action:
              1. If the drift is expected, update the Terraform configuration
              2. If the drift is unexpected, investigate and remediate
              3. Apply the Terraform configuration to reconcile the state
              
              cc @devops-team`,
              labels: ['drift-detection', 'infrastructure', `environment:${{ matrix.environment }}`]
            });
            
            console.log(`Created issue #${issue.data.number}`);

      - name: Notify Slack
        if: steps.drift.outputs.drift == 'true'
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "⚠️ Configuration Drift Detected",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Configuration Drift Detected* ⚠️\n*Environment:* ${{ matrix.environment }}\n*Time:* $(date)\n*View Details:* ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}